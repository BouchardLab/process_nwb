#! /usr/bin/env python
import argparse, os
from pynwb import NWBHDF5IO

parser = argparse.ArgumentParser(description='Copies nwb and creates a new acquistion ' +
                                 'module without the raw container.')
parser.add_argument('src_file', type=str, help='Source nwb file')
parser.add_argument('dst_file', type=str, help='Destination nwb file.' +
                    '\nIf file is the same as the source, then it will be overwritten')

args = parser.parse_args()

src_file = args.src_file
dst_file = args.dst_file

overwrite_flag = False

if dst_file == src_file:
    dst_file = ''.join(src_file.split('.')[:-1]) + '_tmp.nwb'
    overwrite_flag = True


with NWBHDF5IO(src_file, mode='a') as src_io:
    src_nwb = src_io.read()
    try:
        raw_dset = src_nwb.acquisition.pop('Raw')
    except KeyError:
        print('No Raw module exists. Exiting program')
        exit()

    for es_name in raw_dset.electrical_series:
        src_nwb.add_acquisition(raw_dset[es_name])

    with _HDF5IO(dst_file, mode='w') as dst_io:
        # Still linking .. why?!? (WIP)
        dst_io.export(src_io=src_io, container=src_nwb, write_args={'link_data': False})

if overwrite_flag:
    os.remove(src_file)
    os.rename(dst_file, src_file)
